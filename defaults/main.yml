---

# .. envvar:: py_version [[[
#
# List o packages to be installed for compile time dependencies
py_version: 3.9.6
# ]]]

# .. envvar:: py_download_pkg_name [[[
#
# List o packages to be installed for compile time dependencies
py_download_pkg_name: "Python-{{ py_version }}"
# ]]]

# .. envvar:: py_download_url [[[
#
# List o packages to be installed for compile time dependencies
py_download_url: "https://www.python.org/ftp/python/{{ py_version }}/{{ py_download_pkg_name }}.tgz"
# ]]]

# .. envvar:: py_download_archive_md5 [[[
#
# List o packages to be installed for compile time dependencies
py_download_archive_md5: '798b9d3e866e1906f6e32203c4c560fa'
# ]]]

# .. envvar:: py_download_dir [[[
#
# List o packages to be installed for compile time dependencies
py_download_dir: /tmp
# ]]]

# .. envvar:: py_src_dir_path [[[
#
# List o packages to be installed for compile time dependencies
py_src_dir_path: "{{ py_download_dir }}/{{ py_download_pkg_name }}"
# ]]]

# .. envvar:: py_src_pkg_path [[[
#
# List o packages to be installed for compile time dependencies
py_src_pkg_path: "{{ py_download_dir }}/{{ py_download_pkg_name }}.tgz"
# ]]]

# .. envvar:: py_config_opts_base [[[
#
# List o packages to be installed for compile time dependencies
py_config_opts_base: 
  - "--enable-optimizations"
# ]]]

# .. envvar:: py_conf_opts_extra [[[
#
# List o packages to be installed for compile time dependencies
py_conf_opts_extra: []
# ]]]

# whether or not to make this version of python the default.
py_make_default: true

# whether or not to delete the downloaded source code. By setting it
# to false and using a custom var for `py_download_dir` a kind of
# local caching can be achieved.
py_cleanup_downloads: true

# .. envvar:: py_setup_virtualenv [[[
#
# Enable the setup of virtualenv packages and functions
py_setup_virtualenv: true
# ]]]

# .. envvar:: python3_packages_compile_dependencies [[[
#
# List o packages to be installed for compile time dependencies
python3_packages_compile_dependencies:
  - autotools-dev
  - blt-dev
  - bzip2
  - dpkg-dev
  - g++-multilib
  - gcc-multilib
  - libbluetooth-dev
  - libbz2-dev
  - libexpat1-dev
  - libffi-dev
  - libffi6
  - libffi6-dbg
  - libgdbm-dev
  - libgpm2
  - libncursesw5-dev
  - libreadline-dev
  - libsqlite3-dev
  - libssl-dev
  - libtinfo-dev
  - liblzma-dev
  - mime-support
  - net-tools
  - netbase
  - quilt
  - tk-dev
  - zlib1g-dev
# ]]]

# .. envvar:: python3_packages_compile_dependencies_extra [[[
#
# List o packages to be installed for compile time dependencies extra packages
python3_packages_compile_dependencies_extra: []
# ]]]

# .. envvar:: python__base_packages3 [[[
#
# List of base Python 3 packages to install via APT. These packages should allow
# creation of Python 3 virtual environments and installation of Python packages
# via the :command:`pip3` command from the PyPI repository, as well as Ansible
# opration on the remote host.
python__base_packages3:
  - 'python3-httplib2'
  - 'python3-pip'
  - 'python3-setuptools'
  - 'python3-pycurl'
  - 'python3-future'
  - 'python3-virtualenv'
  - 'python3-wheel'
  - 'virtualenv'

# ]]

virtualenv_pip3_packages:
  - virtualenvwrapper

# ]]]